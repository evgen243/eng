---
title: "ImageMagick.Обработка изображений."
date: "2025-06-22"
categories: [news, terminal, imagemagick]
page-layout: full
title-block-banner: false
toc: true
image: "imagemagick.jpg"
---

ImageMagick.Обработка изображений.

### Изменить размер изображения
```
convert img.jpg -resize 100×150 img1.jpg
```
### Сжать изображение по ширине до 100px

При этом высота будет сжата пропорционально.
```
convert img.jpg -resize 100 img1.jpg
```
### Сжать изображение по высоте до 150px

Аналогично предыдущему.
```
convert img.jpg -resize ×150 img1.jpg
```
### Изменение размера изображения без сохранения соотношения сторон

> **-resize \< MMM x NNN! \>**
```
convert img.jpg -resize 100×150! img1.jpg
```
#### Изменение размера изображения в процентах

> **-resize \< MMM% \> — изменение размера изображения в %(процентах)**
```
convert img.jpg -resize 20% img1.jpg
```
### Поворот изображения

Для того что бы повернуть изображение существует параметр -rotate, где значение указывается в градусах:
```
convert img.jpg -rotate 20 img1.jpg
```
### Конвертирование в другой формат
```
mogrify -format tif \*.png
```
Переведет все *.png-изображения в* tif

### Качество \*.jpg
```
convert img.jpg -quality 75 img2.jpg
```
### Практическое применение некоторых возможностей пакета

Опишем некоторые приёмы обработки изображений при помощи ImageMagick.

### Создание анимации
```
animate -delay значение -loop 0 \*
```
        
Эта команда создаёт из всех файлов в данной папке анимацию. После выполнения результат работы будет показан в окне.

Чтобы сохранить анимацию, раскройте меню, нажав левой кнопкой мыши в области окна вывода анимации, затем выберете Animate > Save и укажите имя файла и выберите желаемый формат.

Значение после аргумента -delay задаёт паузы между кадрами **сотых секундах**. Например, -delay 100 означает секундную задержку перед показом очередного кадра анимации.

Значение аргумента -loop указывает на то, сколько раз нужно повторить сначала анимацию. 
Значение -loop 0 задаёт неограниченное количество циклов повторения.


### Различия между двумя изображениями
```
compare изображение1 изображение2 имя_результирующего_изображения
```
Изображения должны быть одинакового разрешения. Результатом работы программы, грубо говоря, станет изображение, где будет выделены цветом пиксели, которые различны в двух заданных изображениях.

### Наложение одного изображения на другое
```
composite изображение1 изображение2 имя_результирующего_изображения
```
Накладывает изображение1 на изображение2, результатом работы станет изображение имя_результирующего_изображения.

### Вывод изображения на экран
```
display имя_изображения
```
Выводит указанное изображение на экран. 

При нажатии на изображение откроется меню ImageMagick, где можно проводить операции с изображением как в обычном графическом редакторе, так что ImageMagick поддерживает не только текстовый интерфейс.

### Информация об изображении
```
identify изображение1 \[изображение 2 ... \]
```
Позволяет узнать тип, разрешение, глубину цвета, размер и другие параметры указанных изображений.

### Создание скриншота
```
import имя_результирующего_изображения
```
При вызове программы необходимо мышкой указать прямоугольную область экрана. Результат будет сохранён в имя_результирующего_изображения.

### Изменение разрешения изображения
```
convert -resize ШИРИНАxВЫСОТА изображение изменённое_изображение
```
Явно задаёт новое разрешение. Пропорциональность сохраняется, даже если введённые значения непропорциональны изначальному разрешению.

### Изменение разрешения в процентах
```
convert -resize количество\_% изображение изменённое_изображение
```
### Изменения разрешения относительно старого разрешения.

Пример использования:
```
convert -resize 50% \*.png resized.png
```
Уменьшает разрешение всех изображений с расширением png в папке в два раза. Изменённые изображения будут называться resized-порядковый_номер.

### Кадрирование изображения
```
convert \*.jpg -crop ШИРИНАxВЫСОТА+0+0 output_изображение.jpg
```
Вырезает прямоугольник размера ШИРИНАxВЫСОТА из изображения, начиная с крайнего левого угла. Чтобы сместить точку начала кадрирования нужно задавать координаты точки начала, например 100x100+50+50 — вырежет область размером 100x100 начиная с точки на изображения с координатами x=50 y=50 (**эти координаты отсчитываются от крайнего левого угла**).

### Изменить глубину цвета
```
convert \*.jpg -depth значение_глубины изображение имя_результирующего_изображения
```
### Склейка изображений в единое
```
convert \* +append имя_результирующего_изображения
```
Из всех файлов в папке создаёт единое изображение, в котором содержаться все изображения из папки в ряд (опция +append означает добавить изображение в ряд с права).

### Добавление цветной рамки вокруг изображения
```
convert \*.jpg -bordercolor имя_цвета -border размер_бордюра изображение имя_результирующего_изображения
```
Пример:
```
convert \*.jpg -bordercolor green -border 3x3
```
#### Поворот изображения
```
convert \*.jpg -rotate +/-градус изображение имя_результирующего_изображения
```
"+" указывает на направление по часовой стрелки, а "-" против часовой. "\>" разрешает поворачивать только если ширина больше высоты, а "\<" наоборот.

Пример:
```
convert -rotate +90
```
